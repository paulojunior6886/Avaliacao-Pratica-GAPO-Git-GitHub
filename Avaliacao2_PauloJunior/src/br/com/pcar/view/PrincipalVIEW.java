/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.pcar.view;

import javax.swing.JOptionPane;
import br.com.pcar.dto.UsuarioDTO;

import java.awt.Image;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import br.com.pcar.ctr.RelatorioCTR; 
import java.util.HashMap; 
import java.util.Map;    
import javax.swing.JFrame; 
import java.util.Date; 
import javax.swing.JFileChooser; 
import java.io.File; 
/**
 *
 * @author paulo
 */
public class PrincipalVIEW extends javax.swing.JFrame {
    
     UsuarioDTO usuarioLogadoDTO;

    /**
     * Creates new form PrincipalVIEW
     */
    public PrincipalVIEW(UsuarioDTO usuarioDTO) {
      initComponents();
       this.usuarioLogadoDTO = usuarioDTO; //
       this.setLocationRelativeTo(null);
       this.setTitle("PCar Concessionária - Usuário: " + usuarioLogadoDTO.getNome_usuario() + " (" + usuarioLogadoDTO.getTipo_usuario() + ")");
       definePermissoes(); // Chamar o método para definir permissões

   /*if (usuarioDTO.getTipo_usuario().equalsIgnoreCase("CLIENTE")) {
        itemMenuUsuario.setVisible(false);
        itemMenuCliente.setVisible(false);
        itemMenuVeiculo.setVisible(false);
    }*/
    }
    
    private void definePermissoes() {
        String tipo = usuarioLogadoDTO.getTipo_usuario();

        if (tipo == null) {
            JOptionPane.showMessageDialog(this, "Tipo de usuário não definido. Saindo.", "Erro Crítico", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
            return;
        }
        
        // Por padrão, alguns itens podem ser desabilitados e habilitados conforme o tipo
        itemMenuUsuario.setEnabled(false); // Cadastro de Usuário
        // itemMenuFornecedor.setEnabled(false);  
        // itemMenuRelatorios.setEnabled(false);  

        switch (tipo.toUpperCase()) {
            case "ADMINISTRADOR":
                itemMenuUsuario.setEnabled(true);
                // itemMenuFornecedor.setEnabled(true);
                // itemMenuRelatorios.setEnabled(true);
                 
                break;
            case "FUNCIONÁRIO":  
                // Funcionário não acessa cadastro de usuários
                itemMenuCliente.setEnabled(true);  
                itemMenuVeiculo.setEnabled(true);
                itemMenuVenda.setEnabled(true);
                // itemMenuFornecedor.setEnabled(true);  
                break;
            case "CLIENTE":
                JMenuCadastro.setVisible(false); // Esconde todo o menu de Cadastro
                editMenu.setVisible(false);      // Esconde todo o menu de Vendas (ou transações)
                // Adicionar menus específicos para cliente se houver (Ex: Minhas Compras, Catálogo)                 
                // itemMenuUsuario.setVisible(false);
                // itemMenuCliente.setVisible(false);
                // itemMenuVeiculo.setVisible(false);
                break;
            default:
                JOptionPane.showMessageDialog(this, "Tipo de usuário desconhecido: " + tipo + ". Acesso restrito.", "Erro de Permissão", JOptionPane.ERROR_MESSAGE);
                // Restringir tudo em caso de tipo desconhecido
                JMenuCadastro.setVisible(false);
                editMenu.setVisible(false);
                break;
        }
    }
     
     private void abreClienteVIEW() {
        ClienteVIEW clienteVIEW = new ClienteVIEW();
        this.desktopPane.add(clienteVIEW);
        clienteVIEW.setVisible(true);
    }  
    
    private void abreVeiculoVIEW() {
        VeiculoVIEW veiculoVIEW = new VeiculoVIEW();
        this.desktopPane.add(veiculoVIEW);
        veiculoVIEW.setVisible(true);
    }
    
    private void abreVendaVIEW() {
        VendaVIEW vendaVIEW = new VendaVIEW();
        this.desktopPane.add(vendaVIEW);
        vendaVIEW.setVisible(true);
    }
          
    private void abreUsuarioVIEW() {
        UsuarioVIEW usuarioVIEW = new UsuarioVIEW(this.usuarioLogadoDTO); // Passar usuário logado se necessário para permissões internas na tela
        this.desktopPane.add(usuarioVIEW);
        usuarioVIEW.setVisible(true);
    }
    
    private void sair() {
        Object[] options = {"Sair", "Cancelar"};
        if (JOptionPane.showOptionDialog(null, "Deseja sair do sistema?", "Confirmação", 
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]) == 0) {
            System.exit(0);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon imageicon = new ImageIcon(getClass().getResource("imagens/cs2.png"));
        Image image = imageicon.getImage();
        desktopPane = new javax.swing.JDesktopPane() {
            public void paintComponent(Graphics graphics) {
                graphics.drawImage(image, 0, 0, getWidth(), getHeight(), this);
            }
        }
        ;
        menuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        JMenuCadastro = new javax.swing.JMenu();
        itemMenuCliente = new javax.swing.JMenuItem();
        itemMenuVeiculo = new javax.swing.JMenuItem();
        itemMenuUsuario = new javax.swing.JMenuItem();
        itemMenuFornecedor = new javax.swing.JMenuItem();
        itemMenuOpcionais = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        itemMenuVenda = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        RelatorioVendas = new javax.swing.JMenuItem();
        itemMenuSair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setForeground(new java.awt.Color(255, 153, 51));
        jMenu1.setText("Pcar Concessionária");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuBar.add(jMenu1);

        JMenuCadastro.setMnemonic('f');
        JMenuCadastro.setText("Cadastro");

        itemMenuCliente.setMnemonic('s');
        itemMenuCliente.setText("Cliente");
        itemMenuCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuClienteActionPerformed(evt);
            }
        });
        JMenuCadastro.add(itemMenuCliente);

        itemMenuVeiculo.setMnemonic('a');
        itemMenuVeiculo.setText("Veiculo");
        itemMenuVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuVeiculoActionPerformed(evt);
            }
        });
        JMenuCadastro.add(itemMenuVeiculo);

        itemMenuUsuario.setText("Usuario");
        itemMenuUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuUsuarioActionPerformed(evt);
            }
        });
        JMenuCadastro.add(itemMenuUsuario);

        itemMenuFornecedor.setText("Fornecedor");
        itemMenuFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuFornecedorActionPerformed(evt);
            }
        });
        JMenuCadastro.add(itemMenuFornecedor);

        itemMenuOpcionais.setText("Opcionais");
        itemMenuOpcionais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuOpcionaisActionPerformed(evt);
            }
        });
        JMenuCadastro.add(itemMenuOpcionais);

        menuBar.add(JMenuCadastro);

        editMenu.setMnemonic('e');
        editMenu.setText("Vendas");

        itemMenuVenda.setMnemonic('t');
        itemMenuVenda.setText("Venda");
        itemMenuVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuVendaActionPerformed(evt);
            }
        });
        editMenu.add(itemMenuVenda);

        menuBar.add(editMenu);

        jMenu2.setText("Relatório");

        RelatorioVendas.setText("Relatório de Vendas");
        RelatorioVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RelatorioVendasActionPerformed(evt);
            }
        });
        jMenu2.add(RelatorioVendas);

        menuBar.add(jMenu2);

        itemMenuSair.setMnemonic('h');
        itemMenuSair.setText("Sair");
        itemMenuSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemMenuSairMouseClicked(evt);
            }
        });
        itemMenuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuSairActionPerformed(evt);
            }
        });
        menuBar.add(itemMenuSair);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1073, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemMenuClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuClienteActionPerformed
        abreClienteVIEW();
    }//GEN-LAST:event_itemMenuClienteActionPerformed

    private void itemMenuVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuVeiculoActionPerformed
        abreVeiculoVIEW();
    }//GEN-LAST:event_itemMenuVeiculoActionPerformed

    private void itemMenuVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuVendaActionPerformed
        abreVendaVIEW();
    }//GEN-LAST:event_itemMenuVendaActionPerformed

    private void itemMenuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuSairActionPerformed
        sair();
    }//GEN-LAST:event_itemMenuSairActionPerformed

    private void itemMenuSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemMenuSairMouseClicked
        sair();
    }//GEN-LAST:event_itemMenuSairMouseClicked

    private void itemMenuUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuUsuarioActionPerformed
        abreUsuarioVIEW();
    }//GEN-LAST:event_itemMenuUsuarioActionPerformed

    private void itemMenuFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuFornecedorActionPerformed
         FornecedorVIEW fornecedorView = null;
    // Lógica para garantir apenas uma instância (opcional)
    for (javax.swing.JInternalFrame JInternalFrame : desktopPane.getAllFrames()) {
        if (JInternalFrame instanceof FornecedorVIEW) {
            fornecedorView = (FornecedorVIEW) JInternalFrame;
            break;
        }
    }

    if (fornecedorView == null) {
        fornecedorView = new FornecedorVIEW();
        desktopPane.add(fornecedorView);
        try {
            fornecedorView.pack(); // Calcula o tamanho
        } catch (Exception e) {
             System.err.println("Erro ao fazer pack() da FornecedorVIEW: " + e.getMessage());
        }
        fornecedorView.setVisible(true);
    }

    try {
        fornecedorView.setSelected(true);
        fornecedorView.moveToFront();
    } catch (java.beans.PropertyVetoException e) {
        System.err.println("Erro ao selecionar FornecedorVIEW: " + e.getMessage());
    }
    fornecedorView.requestFocus();
    }//GEN-LAST:event_itemMenuFornecedorActionPerformed

    private void RelatorioVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RelatorioVendasActionPerformed
        RelatorioCTR relCTR = new RelatorioCTR();
    
    // --- Para exibir o relatório em uma janela JRViewer ---
    // Definir parâmetros (se o seu relatório de vendas usar DATA_INICIAL e DATA_FINAL)
    Map<String, Object> parametros = new HashMap<>();     
    
    JFrame frameDoRelatorio = relCTR.abrirRelatorioVendas("Rel_pcar.jasper", "Relatório de Vendas", parametros);
    
    if (frameDoRelatorio != null) {
        frameDoRelatorio.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Não foi possível abrir o relatório.", "Erro", JOptionPane.ERROR_MESSAGE);
    }
   
    }//GEN-LAST:event_RelatorioVendasActionPerformed

    private void itemMenuOpcionaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuOpcionaisActionPerformed
        OpcionalVIEW opcionalView = null;
    for (javax.swing.JInternalFrame JInternalFrame : desktopPane.getAllFrames()) {
        if (JInternalFrame instanceof OpcionalVIEW) {
            opcionalView = (OpcionalVIEW) JInternalFrame;
            break;
        }
    }

    if (opcionalView == null) {
        opcionalView = new OpcionalVIEW();
        desktopPane.add(opcionalView);
        try {
            opcionalView.pack(); 
        } catch (Exception e) {
             System.err.println("Erro ao fazer pack() da OpcionalVIEW: " + e.getMessage());
        }
        opcionalView.setVisible(true);
    }

    try {
        opcionalView.setSelected(true);
        opcionalView.moveToFront();
    } catch (java.beans.PropertyVetoException e) {
        System.err.println("Erro ao selecionar OpcionalVIEW: " + e.getMessage());
    }
    opcionalView.requestFocus();
    }//GEN-LAST:event_itemMenuOpcionaisActionPerformed

    

    
    /**
     * @param args the command line arguments
     */
   // public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
/*        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
      //  java.awt.EventQueue.invokeLater(new Runnable() {
       //     public void run() {
       //         new PrincipalVIEW().setVisible(true);
         //   }
     //   });
   // }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu JMenuCadastro;
    private javax.swing.JMenuItem RelatorioVendas;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem itemMenuCliente;
    private javax.swing.JMenuItem itemMenuFornecedor;
    private javax.swing.JMenuItem itemMenuOpcionais;
    private javax.swing.JMenu itemMenuSair;
    private javax.swing.JMenuItem itemMenuUsuario;
    private javax.swing.JMenuItem itemMenuVeiculo;
    private javax.swing.JMenuItem itemMenuVenda;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
